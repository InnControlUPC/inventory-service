spring.application.name=inventory-service
server.port=${PORT:8081}

# Spring DataSource Configuration
#mysql-inventory:3306
spring.datasource.url=jdbc:mysql://${MYSQL_INVENTORY_HOST:mysql-inventory}:${MYSQL_INVENTORY_PORT:3306}/InventService?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=${MYSQL_INVENTORY_USERNAME:root}
spring.datasource.password=${MYSQL_INVENTORY_PASSWORD:Admin123admin}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Spring Data JPA Configuration
spring.jpa.show-sql=true

# Open API Configuration
springdoc.api-docs.path=/api/v1/inventory/docs

#Spring Data JPA Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

eureka.instance.instance-id= ${spring.application.name}:${random.value}
eureka.instance.prefer-ip-address= true
eureka.client.service-url.defaultZone= ${EUREKA_SERVER_URL:http://localhost:8761/eureka}


# Elements take their values from the maven pom.xml build-related information
documentation.application.description=@project.description@
documentation.application.version=@project.version@
spring.docker.compose.enabled=false

# JWT Configuration properties
authorization.jwt.secret=d1f4a5f8c3d555d31a9e07547cffe13bc174c6a70a54d37b9bddded4b9d1a86a
authorization.jwt.expiration.days=7

spring.cloud.config.enabled=false